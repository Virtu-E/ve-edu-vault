# Generated by Django 5.2 on 2025-05-11 08:11

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("content", "0001_initial"),
        ("users", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="SubTopicExt",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "description",
                    models.TextField(help_text="Description of the sub-topic"),
                ),
                (
                    "estimated_duration",
                    models.PositiveIntegerField(
                        blank=True,
                        default=30,
                        help_text="Estimated time to complete the sub-topic in minutes",
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(5),
                            django.core.validators.MaxValueValidator(300),
                        ],
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Additional configurable metadata for the sub-topic",
                        null=True,
                    ),
                ),
                (
                    "assessment_criteria",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="Criteria for assessing sub-topic mastery",
                        null=True,
                    ),
                ),
                (
                    "sub_topic",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="extension",
                        to="content.subtopic",
                    ),
                ),
            ],
            options={
                "verbose_name": "Sub-topic Extension",
                "verbose_name_plural": "Sub-topic Extensions",
            },
        ),
        migrations.CreateModel(
            name="TopicExt",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Comprehensive description of the topic and its importance",
                        null=True,
                    ),
                ),
                (
                    "base_mastery_points",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Base points awarded for completing this topic",
                        validators=[django.core.validators.MinValueValidator(1)],
                    ),
                ),
                (
                    "estimated_hours",
                    models.PositiveIntegerField(
                        default=0, help_text="Estimated hours to achieve mastery"
                    ),
                ),
                (
                    "teacher_guide",
                    models.TextField(
                        blank=True,
                        help_text="Guidance for teachers on topic instruction",
                        null=True,
                    ),
                ),
                (
                    "minimum_mastery_percentage",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Minimum percentage required for topic mastery",
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(100),
                        ],
                    ),
                ),
                (
                    "topic",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="extension",
                        to="content.topic",
                    ),
                ),
            ],
            options={
                "verbose_name": "Topic Extension",
                "verbose_name_plural": "Topic Extensions",
            },
        ),
        migrations.CreateModel(
            name="TopicMastery",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "points_earned",
                    models.PositiveIntegerField(
                        default=0, help_text="Total points earned in this topic"
                    ),
                ),
                (
                    "mastery_achievements",
                    models.JSONField(
                        default=dict,
                        help_text="List of specific achievements earned in this category",
                    ),
                ),
                ("started_at", models.DateTimeField(auto_now_add=True)),
                ("last_activity", models.DateTimeField(auto_now=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "mastery_status",
                    models.CharField(
                        choices=[
                            ("not_started", "Not Started"),
                            ("in_progress", "In Progress"),
                            ("mastered", "Mastered"),
                        ],
                        default="not_started",
                        max_length=20,
                    ),
                ),
                (
                    "topic",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="topic_mastery",
                        to="content.topic",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="topic_mastery",
                        to="users.edxuser",
                    ),
                ),
            ],
            options={
                "verbose_name": "User Topic Mastery",
                "verbose_name_plural": "User Topic Mastery",
            },
        ),
    ]
